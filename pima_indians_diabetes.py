# -*- coding: utf-8 -*-
"""Pima_Indians_Diabetes.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19SAREEGPMAMAxax1lP61wyPMfPiZOhwq
"""

pip install xgboost

pip install numpy

pip install pandas

pip install matplotlib

pip install sklearn

"""**Data** **Preprocessing**"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt


from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score

import seaborn as sns

dataset=pd.read_csv("/content/diabetes.csv")

dataset.shape

dataset.head(10)

dataset.isnull().sum()

dataset.columns

dataset.dtypes

"""**Visualizing** **the** **data**"""

dataset.corr()

dataset.describe()

df=pd.DataFrame(dataset)

plt.imshow(dataset.corr())

X = dataset.iloc[:, :-1].values
Y = dataset.iloc[:, -1].values

X_train,X_test,Y_train,Y_test=train_test_split(X,Y,test_size=0.2,random_state=42)

X

"""**XGBClassifier**"""

from xgboost import XGBClassifier
model=XGBClassifier()
model.fit(X_train,Y_train)

print(model)

ze=np.array([[6,148,72,35,0,33.6,0.627,50]])

y_pred=model.predict(X_test)

print(y_pred)

accuracy1=accuracy_score(y_pred,Y_test)

print(accuracy1)

from sklearn.metrics import confusion_matrix,classification_report
confusion_matrix(Y_test,y_pred)

classification_report(Y_test,y_pred)

labels = np.arange(2)
target_names = list("01")
clf_report1 = classification_report(Y_test,
                                   y_pred,
                                   labels=labels,
                                   target_names=target_names,
                                   output_dict=True)
sns.heatmap(pd.DataFrame(clf_report1).iloc[:-1, :].T, annot=True)

print(model.predict(ze))



"""**Support Vector Classifier**"""

from sklearn.svm import SVC # "Support vector classifier"
classifier2 = SVC(kernel='linear', random_state=42)
classifier2.fit(X_train, Y_train)

y_pred4=classifier2.predict(X_test)

print(y_pred4)

accuracy4=accuracy_score(y_pred4,Y_test)
print(accuracy4)

confusion_matrix(Y_test,y_pred4)

classification_report(Y_test,y_pred4)

labels = np.arange(2)
target_names = list("01")
clf_report4 = classification_report(Y_test,
                                   y_pred4,
                                   labels=labels,
                                   target_names=target_names,
                                   output_dict=True)
sns.heatmap(pd.DataFrame(clf_report4).iloc[:-1, :].T, annot=True)

print(classifier2.predict(ze))


"""**K Nearest Neighbour**"""

from sklearn.neighbors import KNeighborsClassifier
clf2=KNeighborsClassifier(n_neighbors=5)
clf2.fit(X_train,Y_train)
pred6=clf2.predict(X_test)
print(accuracy_score(pred6,Y_test))

print(pred6)

confusion_matrix(Y_test,pred6)

classification_report(Y_test,pred6)

labels = np.arange(2)
target_names = list("01")

clf_report = classification_report(Y_test,
                                   pred6,
                                   labels=labels,
                                   target_names=target_names,
                                   output_dict=True)

sns.heatmap(pd.DataFrame(clf_report).iloc[:-1, :].T, annot=True)

print(clf2.predict(ze))